version: "3.2"
volumes:
    grafana-mount-data:
    redis-mount-data:
    prometheus-kafka-mount-data:
    prometheus-redis-mount-data:
    grafana-mount-data-visual:

services:
  # kafka
  prometheus_kafka:
    container_name: prometheus_kafka
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-kafka-mount-data:/etc/prometheus
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    # network_mode: "host"
    volumes:
      - grafana-mount-data:/var/lib/grafana
    restart: always
  
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: always

  kafka:
    build: .
    container_name: kafka
    links:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  # redis
  prometheus_redis:
    container_name: prometheus_redis
    image: prom/prometheus
    ports:
      - 9091:9090
    volumes:
      - prometheus-redis-mount-data:/etc/prometheus
    restart: always

  redis:
    container_name: redis
    image: "bitnami/redis:latest"
    ports:
      - 6379:6379
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=test
    volumes:
      - redis-mount-data:/bitnami/redis/data
    restart: always

  redis-exporter:
    container_name: redis_exporter
    image: oliver006/redis_exporter
    ports:
      - 9121:9121
    environment:
      REDIS_ADDR: "redis:6379"
      REDIS_USER: null
      REDIS_PASSWORD: test
    links:
      - redis
      - prometheus_redis
    restart: always
